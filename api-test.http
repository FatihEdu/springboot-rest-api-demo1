### Test home endpoint
GET http://localhost:8080/

### Test GET all reviews (empty database)
GET http://localhost:8080/reviews

### Test POST - Create first review
POST http://localhost:8080/reviews
Content-Type: application/json

{
  "rating": 5,
  "content": "Excellent product! Highly recommend."
}

### Test POST - Create second review
POST http://localhost:8080/reviews
Content-Type: application/json

{
  "rating": 3,
  "content": "Average product, could be better."
}

### Test POST - Create third review (no content)
POST http://localhost:8080/reviews
Content-Type: application/json

{
  "rating": 4
}

### Test POST - Create fourth review
POST http://localhost:8080/reviews
Content-Type: application/json

{
  "rating": 2,
  "content": "Not satisfied with the quality."
}

### Test GET all reviews (after creating some)
GET http://localhost:8080/reviews

### Test GET specific review by ID
GET http://localhost:8080/reviews/1

### Test GET reviews with requireContent filter
GET http://localhost:8080/reviews?requireContent=true

### Test GET reviews with minRating filter
GET http://localhost:8080/reviews?minRating=4

### Test GET reviews with both filters
GET http://localhost:8080/reviews?requireContent=true&minRating=3

### Test PUT - Update review rating and content
PUT http://localhost:8080/reviews/1
Content-Type: application/json

{
  "rating": 4,
  "content": "Updated review content"
}

### Test PUT - Update only rating
PUT http://localhost:8080/reviews/2
Content-Type: application/json

{
  "rating": 5
}

### Test PUT - Update only content
PUT http://localhost:8080/reviews/3
Content-Type: application/json

{
  "content": "Added content to previously empty review"
}

### Test POST - Invalid rating (should fail)
POST http://localhost:8080/reviews
Content-Type: application/json

{
  "rating": 0,
  "content": "This should fail"
}

### Test POST - Rating out of range (should fail)
POST http://localhost:8080/reviews
Content-Type: application/json

{
  "rating": 6,
  "content": "This should also fail"
}

### Test POST - Content too long (should fail)
POST http://localhost:8080/reviews
Content-Type: application/json

{
  "rating": 3,
  "content": "This is a very long content that exceeds 500 characters. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. This should definitely exceed 500 characters and cause validation to fail."
}

### Test POST - Rating 0 only (should fail)
POST http://localhost:8080/reviews
Content-Type: application/json

{
  "rating": 0
}

### Test POST - Empty object (should fail)
POST http://localhost:8080/reviews
Content-Type: application/json

{
}

### Test GET non-existent review (should return 404)
GET http://localhost:8080/reviews/999

### Test PUT non-existent review (should return 404)
PUT http://localhost:8080/reviews/999
Content-Type: application/json

{
  "rating": 3,
  "content": "This should fail"
}

### Test PUT with invalid rating (should fail)
PUT http://localhost:8080/reviews/1
Content-Type: application/json

{
  "rating": 7,
  "content": "Invalid rating"
}

### Test PUT with empty data (should return 400 - Bad Request)
PUT http://localhost:8080/reviews/1
Content-Type: application/json

{
  "rating": 0
}

### Test PUT with empty object (should return 400 - Bad Request)
PUT http://localhost:8080/reviews/1
Content-Type: application/json

{
}

### Test PUT - No changes (same rating, should return 400)
PUT http://localhost:8080/reviews/1
Content-Type: application/json

{
  "rating": 4
}

### Test PUT - No changes (same content, should return 400)
PUT http://localhost:8080/reviews/1
Content-Type: application/json

{
  "content": "Updated review content"
}

### Test PUT - No changes (same rating and content, should return 400)
PUT http://localhost:8080/reviews/1
Content-Type: application/json

{
  "rating": 4,
  "content": "Updated review content"
}

### Test PUT - Content too long (should return 400)
PUT http://localhost:8080/reviews/1
Content-Type: application/json

{
  "rating": 3,
  "content": "This is a very long content that exceeds 500 characters. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. This should definitely exceed 500 characters and cause validation to fail."
}

### Test GET all reviews (again)
GET http://localhost:8080/reviews